{
  "name": "lodash",
  "version": "1.2.1",
  "main": "./dist/lodash.compat.js",
  "ignore": [
    ".*",
    "*.custom.*",
    "*.d.ts",
    "*.map",
    "*.md",
    "*.txt",
    "build.js",
    "index.js",
    "component.json",
    "package.json",
    "build",
    "doc",
    "node_modules",
    "perf",
    "test",
    "vendor"
  ],
  "gitHead": "1b7be39d1fa64d94fd22c2593550f890de5d105e",
  "readme": "# Lo-Dash <sup>v1.2.1</sup>\r\n\r\nA low-level utility library delivering consistency, [customization](https://github.com/bestiejs/lodash#custom-builds), [performance](http://lodash.com/benchmarks), and [extra features](https://github.com/bestiejs/lodash#features).\r\n\r\n## Download\r\n\r\n* Lo-Dash builds (for modern environments):<br>\r\n[Development](https://raw.github.com/bestiejs/lodash/v1.2.1/dist/lodash.js) and\r\n[Production](https://raw.github.com/bestiejs/lodash/v1.2.1/dist/lodash.min.js)\r\n\r\n* Lo-Dash compatibility builds (for legacy and modern environments):<br>\r\n[Development](https://raw.github.com/bestiejs/lodash/v1.2.1/dist/lodash.compat.js) and\r\n[Production](https://raw.github.com/bestiejs/lodash/v1.2.1/dist/lodash.compat.min.js)\r\n\r\n* Underscore compatibility builds:<br>\r\n[Development](https://raw.github.com/bestiejs/lodash/v1.2.1/dist/lodash.underscore.js) and\r\n[Production](https://raw.github.com/bestiejs/lodash/v1.2.1/dist/lodash.underscore.min.js)\r\n\r\n* CDN copies of ≤ v1.2.1’s builds are available on [cdnjs](http://cdnjs.com/) thanks to [CloudFlare](http://www.cloudflare.com/):<br>\r\n[Lo-Dash dev](http://cdnjs.cloudflare.com/ajax/libs/lodash.js/1.2.1/lodash.js),\r\n[Lo-Dash prod](http://cdnjs.cloudflare.com/ajax/libs/lodash.js/1.2.1/lodash.min.js),<br>\r\n[Lo-Dash compat-dev](http://cdnjs.cloudflare.com/ajax/libs/lodash.js/1.2.1/lodash.compat.js),\r\n[Lo-Dash compat-prod](http://cdnjs.cloudflare.com/ajax/libs/lodash.js/1.2.1/lodash.compat.min.js),<br>\r\n[Underscore compat-dev](http://cdnjs.cloudflare.com/ajax/libs/lodash.js/1.2.1/lodash.underscore.js), and\r\n[Underscore compat-prod](http://cdnjs.cloudflare.com/ajax/libs/lodash.js/1.2.1/lodash.underscore.min.js)\r\n\r\n* For optimal file size, [create a custom build](https://github.com/bestiejs/lodash#custom-builds) with only the features you need\r\n\r\n## Dive in\r\n\r\nWe’ve got [API docs](http://lodash.com/docs), [benchmarks](http://lodash.com/benchmarks), and [unit tests](http://lodash.com/tests).\r\n\r\nFor a list of upcoming features, check out our [roadmap](https://github.com/bestiejs/lodash/wiki/Roadmap).\r\n\r\n## Resources\r\n\r\nFor more information check out these articles, screencasts, and other videos over Lo-Dash:\r\n\r\n * Posts\r\n  - [Say “Hello” to Lo-Dash](http://kitcambridge.be/blog/say-hello-to-lo-dash/)\r\n\r\n * Videos\r\n  - [Introducing Lo-Dash](https://vimeo.com/44154599)\r\n  - [Lo-Dash optimizations and custom builds](https://vimeo.com/44154601)\r\n  - [Lo-Dash’s origin and why it’s a better utility belt](https://vimeo.com/44154600)\r\n  - [Unit testing in Lo-Dash](https://vimeo.com/45865290)\r\n  - [Lo-Dash’s approach to native method use](https://vimeo.com/48576012)\r\n  - [CascadiaJS: Lo-Dash for a better utility belt](http://www.youtube.com/watch?v=dpPy4f_SeEk)\r\n\r\n## Features\r\n\r\n * AMD loader support ([RequireJS](http://requirejs.org/), [curl.js](https://github.com/cujojs/curl), etc.)\r\n * [_(…)](http://lodash.com/docs#_) supports intuitive chaining\r\n * [_.at](http://lodash.com/docs#at) for cherry-picking collection values\r\n * [_.bindKey](http://lodash.com/docs#bindKey) for binding [*“lazy”* defined](http://michaux.ca/articles/lazy-function-definition-pattern) methods\r\n * [_.cloneDeep](http://lodash.com/docs#cloneDeep) for deep cloning arrays and objects\r\n * [_.contains](http://lodash.com/docs#contains) accepts a `fromIndex` argument\r\n * [_.debounce](http://lodash.com/docs#debounce) and [_.throttle](http://lodash.com/docs#throttle) accept an `options` argument for more control\r\n * [_.createCallback](http://lodash.com/docs#createCallback) to customize how callback arguments are handled and support callback shorthands in mixins\r\n * [_.findIndex](http://lodash.com/docs#findIndex) and [_.findKey](http://lodash.com/docs#findKey) for finding indexes and keys of collections\r\n * [_.forEach](http://lodash.com/docs#forEach) is chainable and supports exiting iteration early\r\n * [_.forIn](http://lodash.com/docs#forIn) for iterating over an object’s own and inherited properties\r\n * [_.forOwn](http://lodash.com/docs#forOwn) for iterating over an object’s own properties\r\n * [_.isPlainObject](http://lodash.com/docs#isPlainObject) checks if values are created by the `Object` constructor\r\n * [_.merge](http://lodash.com/docs#merge) for a deep [_.extend](http://lodash.com/docs#extend)\r\n * [_.parseInt](http://lodash.com/docs#parseInt) for consistent cross-environment behavior\r\n * [_.partial](http://lodash.com/docs#partial) and [_.partialRight](http://lodash.com/docs#partialRight) for partial application without `this` binding\r\n * [_.runInContext](http://lodash.com/docs#runInContext) for easier mocking and extended environment support\r\n * [_.support](http://lodash.com/docs#support) to flag environment features\r\n * [_.template](http://lodash.com/docs#template) supports [*“imports”* options](http://lodash.com/docs#templateSettings_imports), [ES6 template delimiters](http://people.mozilla.org/~jorendorff/es6-draft.html#sec-7.8.6), and [sourceURLs](http://www.html5rocks.com/en/tutorials/developertools/sourcemaps/#toc-sourceurl)\r\n * [_.unzip](http://lodash.com/docs#unzip) as the inverse of [_.zip](http://lodash.com/docs#zip)\r\n * [_.where](http://lodash.com/docs#where) supports deep object comparisons\r\n * [_.clone](http://lodash.com/docs#clone), [_.omit](http://lodash.com/docs#omit), [_.pick](http://lodash.com/docs#pick),\r\n   [and more…](http://lodash.com/docs \"_.assign, _.cloneDeep, _.first, _.initial, _.isEqual, _.last, _.merge, _.rest\") accept `callback` and `thisArg` arguments\r\n * [_.contains](http://lodash.com/docs#contains), [_.size](http://lodash.com/docs#size), [_.toArray](http://lodash.com/docs#toArray),\r\n   [and more…](http://lodash.com/docs \"_.at, _.countBy, _.every, _.filter, _.find, _.forEach, _.groupBy, _.invoke, _.map, _.max, _.min, _.pluck, _.reduce, _.reduceRight, _.reject, _.shuffle, _.some, _.sortBy, _.where\") accept strings\r\n * [_.filter](http://lodash.com/docs#filter), [_.find](http://lodash.com/docs#find), [_.map](http://lodash.com/docs#map),\r\n   [and more…](http://lodash.com/docs \"_.countBy, _.every, _.first, _.groupBy, _.initial, _.last, _.max, _.min, _.reject, _.rest, _.some, _.sortBy, _.sortedIndex, _.uniq\") support *“_.pluck”* and *“_.where”* `callback` shorthands\r\n\r\n## Support\r\n\r\nLo-Dash has been tested in at least Chrome 5~26, Firefox 2~20, IE 6-10, Opera 9.25~12, Safari 3-6, Node.js 0.4.8-0.10.5, Narwhal 0.3.2, PhantomJS 1.9.0, RingoJS 0.9, and Rhino 1.7RC5.\r\n\r\n## Custom builds\r\n\r\nCustom builds make it easy to create lightweight versions of Lo-Dash containing only the methods you need.\r\nTo top it off, we handle all method dependency and alias mapping for you.\r\nFor a more detailed summary over the differences between various builds, check out our [wiki entry](https://github.com/bestiejs/lodash/wiki/build-differences).\r\n\r\n * Backbone builds, with only methods required by Backbone, may be created using the `backbone` modifier argument.\r\n```bash\r\nlodash backbone\r\n```\r\n\r\n * Legacy builds, tailored for older environments without [ES5 support](http://es5.github.com/), may be created using the `legacy` modifier argument.\r\n```bash\r\nlodash legacy\r\n```\r\n\r\n * Modern builds, tailored for newer environments with ES5 support, may be created using the `modern` modifier argument.\r\n```bash\r\nlodash modern\r\n```\r\n\r\n * Mobile builds, without method compilation and most bug fixes for old browsers, may be created using the `mobile` modifier argument.\r\n```bash\r\nlodash mobile\r\n```\r\n\r\n * Strict builds, with `_.bindAll`, `_.defaults`, and `_.extend` in [strict mode](http://es5.github.com/#C), may be created using the `strict` modifier argument.\r\n```bash\r\nlodash strict\r\n```\r\n\r\n * Underscore builds, tailored for projects already using Underscore, may be created using the `underscore` modifier argument.\r\n```bash\r\nlodash underscore\r\n```\r\n\r\nCustom builds may be created using the following commands:\r\n\r\n * Use the `category` argument to pass comma separated categories of methods to include in the build.<br>\r\n   Valid categories (case-insensitive) are *“arrays”*, *“chaining”*, *“collections”*, *“functions”*, *“objects”*, and *“utilities”*.\r\n```bash\r\nlodash category=collections,functions\r\nlodash category=\"collections, functions\"\r\n```\r\n\r\n * Use the `exports` argument to pass comma separated names of ways to export the `LoDash` function.<br>\r\n   Valid exports are *“amd”*, *“commonjs”*, *“global”*, *“node”*, and *“none”*.\r\n```bash\r\nlodash exports=amd,commonjs,node\r\nlodash exports=\"amd, commonjs, node\"\r\n```\r\n\r\n * Use the `iife` argument to specify code to replace the immediately-invoked function expression that wraps Lo-Dash.\r\n```bash\r\nlodash iife=\"!function(window,undefined){%output%}(this)\"\r\n```\r\n\r\n * Use the `include` argument to pass comma separated method/category names to include in the build.\r\n```bash\r\nlodash include=each,filter,map\r\nlodash include=\"each, filter, map\"\r\n```\r\n\r\n * Use the `minus` argument to pass comma separated method/category names to remove from those included in the build.\r\n```bash\r\nlodash underscore minus=result,shuffle\r\nlodash underscore minus=\"result, shuffle\"\r\n```\r\n\r\n * Use the `plus` argument to pass comma separated method/category names to add to those included in the build.\r\n```bash\r\nlodash backbone plus=random,template\r\nlodash backbone plus=\"random, template\"\r\n```\r\n\r\n * Use the `template` argument to pass the file path pattern used to match template files to precompile.\r\n```bash\r\nlodash template=\"./*.jst\"\r\n```\r\n\r\n * Use the `settings` argument to pass the template settings used when precompiling templates.\r\n```bash\r\nlodash settings=\"{interpolate:/\\{\\{([\\s\\S]+?)\\}\\}/g}\"\r\n```\r\n\r\n * Use the `moduleId` argument to specify the AMD module ID of Lo-Dash, which defaults to “lodash”, used by precompiled templates.\r\n```bash\r\nlodash moduleId=\"underscore\"\r\n```\r\n\r\nAll arguments, except `legacy` with `mobile`, `modern`, or `underscore`, may be combined.<br>\r\nUnless specified by `-o` or `--output`, all files created are saved to the current working directory.\r\n\r\nThe following options are also supported:\r\n\r\n * `-c`, `--stdout` ......... Write output to standard output\r\n * `-d`, `--debug` ........... Write only the non-minified development output\r\n * `-h`, `--help` ............. Display help information\r\n * `-m`, `--minify` ......... Write only the minified production output\r\n * `-o`, `--output` ......... Write output to a given path/filename\r\n * `-p`, `--source-map` .. Generate a source map for the minified output, using an optional source map URL\r\n * `-s`, `--silent` ......... Skip status updates normally logged to the console\r\n * `-V`, `--version` ....... Output current version of Lo-Dash\r\n\r\nThe `lodash` command-line utility is available when Lo-Dash is installed as a global package (i.e. `npm install -g lodash`).\r\n\r\n## Installation and usage\r\n\r\nIn browsers:\r\n\r\n```html\r\n<script src=\"lodash.js\"></script>\r\n```\r\n\r\nUsing [`npm`](http://npmjs.org/):\r\n\r\n```bash\r\nnpm install lodash\r\n\r\nnpm install -g lodash\r\nnpm link lodash\r\n```\r\n\r\nTo avoid potential issues, update `npm` before installing Lo-Dash:\r\n\r\n```bash\r\nnpm install npm -g\r\n```\r\n\r\nIn [Node.js](http://nodejs.org/) and [RingoJS ≥ v0.8.0](http://ringojs.org/):\r\n\r\n```js\r\nvar _ = require('lodash');\r\n\r\n// or as a drop-in replacement for Underscore\r\nvar _ = require('lodash/dist/lodash.underscore');\r\n```\r\n\r\n**Note:** If Lo-Dash is installed globally, run [`npm link lodash`](http://blog.nodejs.org/2011/03/23/npm-1-0-global-vs-local-installation/) in your project’s root directory before requiring it.\r\n\r\nIn [RingoJS ≤ v0.7.0](http://ringojs.org/):\r\n\r\n```js\r\nvar _ = require('lodash')._;\r\n```\r\n\r\nIn [Rhino](http://www.mozilla.org/rhino/):\r\n\r\n```js\r\nload('lodash.js');\r\n```\r\n\r\nIn an AMD loader like [RequireJS](http://requirejs.org/):\r\n\r\n```js\r\nrequire({\r\n  'paths': {\r\n    'underscore': 'path/to/lodash'\r\n  }\r\n},\r\n['underscore'], function(_) {\r\n  console.log(_.VERSION);\r\n});\r\n```\r\n\r\n## Release Notes\r\n\r\n### <sup>v1.2.1</sup>\r\n\r\n * Added Component package support\r\n * Updated the build utility to work with changes in GitHub’s API\r\n * Ensured `_.isPlainObject` works with objects created by `Object.create(null)`\r\n * Ensured *“isType”* methods return `false` for subclassed values\r\n * Ensured debounced functions, with `leading` and `trailing` calls enabled,<br>\r\n   only perform trailing calls after they’re called more than once\r\n\r\nThe full changelog is available [here](https://github.com/bestiejs/lodash/wiki/Changelog).\r\n\r\n## BestieJS\r\n\r\nLo-Dash is part of the BestieJS *“Best in Class”* module collection. This means we promote solid browser/environment support, ES5+ precedents, unit testing, and plenty of documentation.\r\n\r\n## Author\r\n\r\n| [![twitter/jdalton](http://gravatar.com/avatar/299a3d891ff1920b69c364d061007043?s=70)](http://twitter.com/jdalton \"Follow @jdalton on Twitter\") |\r\n|---|\r\n| [John-David Dalton](http://allyoucanleet.com/) |\r\n\r\n## Contributors\r\n\r\n| [![twitter/kitcambridge](http://gravatar.com/avatar/6662a1d02f351b5ef2f8b4d815804661?s=70)](https://twitter.com/kitcambridge \"Follow @kitcambridge on Twitter\") | [![twitter/mathias](http://gravatar.com/avatar/24e08a9ea84deb17ae121074d0f17125?s=70)](http://twitter.com/mathias \"Follow @mathias on Twitter\") |\r\n|---|---|\r\n| [Kit Cambridge](http://kitcambridge.github.io/) | [Mathias Bynens](http://mathiasbynens.be/) |\r\n",
  "readmeFilename": "README.md",
  "_id": "lodash@1.2.1",
  "description": "A low-level utility library delivering consistency, [customization](https://github.com/bestiejs/lodash#custom-builds), [performance](http://lodash.com/benchmarks), and [extra features](https://github.com/bestiejs/lodash#features).",
  "repository": {
    "type": "git",
    "url": "git://github.com/bestiejs/lodash.git"
  }
}